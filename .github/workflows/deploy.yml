name: Deploy to Namecheap via FTP

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify build output
        run: |
          echo "Build completed. Checking dist folder..."
          ls -la dist/
          echo "Contents of dist/assets:"
          ls -la dist/assets/ || echo "No assets folder"

      - name: Deploy to Namecheap FTP with multiple path attempts
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: public_html/chords/
          protocol: ftp
          port: 21
          log-level: verbose
          dry-run: true
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Deploy Attempt 1 - Namecheap Standard Path
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        continue-on-error: true
        id: deploy1
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: public_html/chords/
          protocol: ftp
          port: 21
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Deploy Attempt 2 - Relative Path
        if: steps.deploy1.outcome == 'failure'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        continue-on-error: true
        id: deploy2
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ./public_html/chords/
          protocol: ftp
          port: 21
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Deploy Attempt 3 - Absolute Home Path
        if: steps.deploy1.outcome == 'failure' && steps.deploy2.outcome == 'failure'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        continue-on-error: true
        id: deploy3
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /home/yenzqqrt/public_html/chords/
          protocol: ftp
          port: 21
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**

      - name: Deploy Attempt 4 - LFTP Fallback
        if: steps.deploy1.outcome == 'failure' && steps.deploy2.outcome == 'failure' && steps.deploy3.outcome == 'failure'
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          sudo apt-get update && sudo apt-get install -y lftp

          echo "🔍 Attempting LFTP deployment as fallback..."

          # Try each path with lftp
          for path in "public_html/chords/" "./public_html/chords/" "/home/yenzqqrt/public_html/chords/"; do
            echo "🚀 Trying path: $path"

            cat > deploy.lftp << EOF
          set ftp:ssl-allow no
          set ftp:passive-mode yes
          set cmd:fail-exit yes
          open ftp://$FTP_USERNAME:$FTP_PASSWORD@$FTP_SERVER
          cd $path
          pwd
          lcd dist
          mirror --reverse --delete --verbose --parallel=3
          quit
          EOF

            if lftp -f deploy.lftp; then
              echo "✅ Success with path: $path"
              break
            else
              echo "❌ Failed with path: $path"
            fi
          done

      - name: Verify deployment
        run: |
          echo "Deployment completed!"
          echo "Files should now be at: ${{ secrets.FTP_SERVER }}/public_html/chords/"
          echo "Accessible at: https://yenzer.net/chords/"